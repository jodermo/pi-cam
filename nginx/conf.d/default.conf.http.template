# nginx/conf.d/default.conf.http.template

server {
    listen 80;
    server_name ${DOMAIN};


    # MJPEG stream - proxy directly to camera container
    location = /api/stream {
        proxy_pass         http://pi-cam-camera:8000/api/stream;
        proxy_http_version 1.1;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Connection "";
        chunked_transfer_encoding off;
        proxy_buffering    off;
    }

    # Bare /api → controller
    location = /api {
        proxy_pass         http://pi-cam-controller:8001/api;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    # All other API calls → controller
    location /api/ {
        proxy_pass         http://pi-cam-controller:8001/api/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }
    
    location / {
        proxy_pass         http://pi-cam-controller:8001;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    # serve media (photos, videos, timelapse) directly with proper MIME + range support
    location /media/ {
        alias /app/media/;              # point this at your MEDIA_ROOT
        autoindex off;
        # ensure .mp4 → video/mp4, .jpg → image/jpeg, etc.
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # allow byte-range requests so <video> can stream and seek
        add_header   Accept-Ranges  bytes;
        # optional caching
        expires      1h;
    }


    location /static/ { alias /app/static/; }

}

# nginx/conf.d/default.conf.https.template


# ─────────────── MIME setup ────────────────────
include       /etc/nginx/mime.types;
# ────────────────────────────────────────────────


# Redirect HTTP to HTTPS (in your HTTP template or in a separate file)
server {
    listen 80;
    server_name ${DOMAIN};
    return 301 https://$host$request_uri;
    types {
      video/mp4  mp4;
    }
    default_type  application/octet-stream;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name ${DOMAIN};

    # SSL certificates (mounted via your .env settings)
    ssl_certificate     ${SSL_CERTIFICATE};
    ssl_certificate_key ${SSL_CERTIFICATE_KEY};
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location = /api/stream {
        proxy_pass         http://pi-cam-camera:8000/api/stream;
        proxy_http_version 1.1;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Connection "";
        chunked_transfer_encoding off;
        proxy_buffering    off;
    }

    # Bare /api → controller
    location = /api {
        proxy_pass         http://pi-cam-controller:8001/api;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    # All other API → controller
    location /api/ {
        proxy_pass         http://pi-cam-controller:8001/api/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    # Main controller app proxy
    location / {
        proxy_pass         http://pi-cam-controller:8001;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }


    # Static and media
    location /static/ {
        alias /app/static/;
        access_log off;
        expires 1h;
    }



    location /media/ {
        alias           /app/media/;
        # mime.types already included above
        add_header      Accept-Ranges bytes;
        expires         1h;
        access_log      off;


        types {
            video/mp4  mp4;
        }
        default_type  application/octet-stream;
    }


}
# nginx/conf.d/default.conf.https.template
# ───────────────────────── nginx.conf (main) ──────────────────────────
# somewhere near the top, inside `http { ... }`, *once*:
sendfile              off;                    # avoids Range bugs in many containers
include               /etc/nginx/mime.types;  # loads all ext→MIME mappings
default_type          application/octet-stream;

# ───────────────────── default.conf.https.template ─────────────────────

# HTTP → HTTPS redirect
server {
    listen       80;
    server_name  ${DOMAIN};
    return       301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name ${DOMAIN};

    ssl_certificate     ${SSL_CERTIFICATE};
    ssl_certificate_key ${SSL_CERTIFICATE_KEY};
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # ─── API endpoints ───────────────────────────────────
    location = /api/stream {
        proxy_pass         http://pi-cam-camera:8000/api/stream;
        proxy_http_version 1.1;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Connection "";
        chunked_transfer_encoding off;
        proxy_buffering    off;
    }

    location /api/ {
        proxy_pass         http://pi-cam-controller:8001/api/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    location / {
        proxy_pass         http://pi-cam-controller:8001;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
    }

    # ─── Static assets ─────────────────────────────────
    location /static/ {
        alias        /app/static/;
        access_log   off;
        expires      1h;
    }

    location /media/ {
        alias           /app/media/;
        try_files       $uri =404;
        add_header      Accept-Ranges bytes always;
        expires         1h;
        access_log      off;
        # ← no `types{}` or `default_type` here
    }
}
